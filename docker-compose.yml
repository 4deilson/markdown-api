version: '3.8'

services:
  markdown-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: markdown-to-pdf-api
    ports:
      - "7000:7000"
    environment:
      - NODE_ENV=production
      - PORT=7000
      - API_KEY=md-api-ae4a14b70333ce2424fcc5db55a6c00a0255939688adf76f02f6b0e32a9261eb
      # Configurações específicas para Puppeteer em container
      - PUPPETEER_EXECUTABLE_PATH=/usr/bin/google-chrome-stable
      - PUPPETEER_DISABLE_DEV_SHM_USAGE=true
      - CHROME_BIN=/usr/bin/google-chrome-stable
      - DISPLAY=:99
    restart: unless-stopped
    # Configurações de segurança para Puppeteer
    security_opt:
      - seccomp:unconfined
    # Compartilhar memória para Chrome
    shm_size: 2gb
    # Recursos otimizados para PDF generation
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.25'
    healthcheck:
      test: ["CMD", "node", "-e", "const http = require('http'); const options = { hostname: 'localhost', port: 7000, path: '/health', timeout: 10000 }; const req = http.request(options, (res) => { if (res.statusCode === 200) { console.log('API OK'); process.exit(0); } else { console.log('API FAIL'); process.exit(1); } }); req.on('error', () => { console.log('API ERROR'); process.exit(1); }); req.end();"]
      interval: 60s
      timeout: 30s
      retries: 3
      start_period: 30s
    volumes:
      # Volume para arquivos temporários (opcional)
      - /tmp:/tmp
      # Volume para logs (opcional)
      - ./logs:/app/logs
    labels:
      - "traefik.enable=false"
      - "com.docker.compose.project=markdown-api"
      - "description=Markdown to PDF API with Puppeteer"
